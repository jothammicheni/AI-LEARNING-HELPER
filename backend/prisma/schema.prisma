generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  userId     Int        @id @default(autoincrement())
  email      String     @unique
  name       String
  password   String
  isVerified Boolean    @default(false)
  role       String     @default("subscriber")
  createdAt  DateTime   @default(now())
  comments   Comments[]
  courses    Courses[]  @relation("UserCourses")
  progress   Progress[]
}

model Courses {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  tutorId     Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  coverPath   String
  isCompleted Boolean    @default(false)
  isStated    Boolean    @default(false)
  chapters    Chapters[]
  comments    Comments[]
  tutor       Users      @relation("UserCourses", fields: [tutorId], references: [userId])
  progress    Progress[]
  quizzes     Quizzes[]
}

model Chapters {
  id          Int        @id @default(autoincrement())
  courseId    Int
  title       String
  contentPath String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  isCompleted Boolean    @default(false)
  course      Courses    @relation(fields: [courseId], references: [id])
  progress    Progress[]
}

model Quizzes {
  id        Int      @id @default(autoincrement())
  courseId  Int
  question  String
  answer    String
  createdAt DateTime @default(now())
  course    Courses  @relation(fields: [courseId], references: [id])
}

model Progress {
  id                 Int      @id @default(autoincrement())
  userId             Int
  courseId           Int
  chapterId          Int
  progressPercentage Float
  lastAccessed       DateTime
  chapter            Chapters @relation(fields: [chapterId], references: [id])
  course             Courses  @relation(fields: [courseId], references: [id])
  user               Users    @relation(fields: [userId], references: [userId])
}

model Comments {
  id        Int      @id @default(autoincrement())
  courseId  Int
  comment   String
  userId    Int?
  createdAt DateTime @default(now())
  course    Courses  @relation(fields: [courseId], references: [id])
  user      Users?   @relation(fields: [userId], references: [userId])
}
